---
import Head from "../../components/Head.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";

import { Image } from "astro:assets";
import { getCollection } from "astro:content";

import MarkdownIt from "markdown-it";

const posts = (await getCollection("blog")).sort(
  (a, b) => (b.data.pubDate?.valueOf() ?? 0) - (a.data.pubDate?.valueOf() ?? 0)
);
---

<!doctype html>
<html lang="en">
  <Head />
  <style>
    main div {
      margin-bottom: 2em;
    }

    main div h2 {
      margin: 0 0 0.25em 0;
    }

    main div img {
      display: block;
      width: 100%;
      height: 10em;
      object-fit: cover;
      margin-left: auto;
      margin-right: auto;
    }

    main span.post-date {
      font-size: 0.75rem;
      color: #555;
    }

    main span.post-date::before {
      content: "—————";
      color: #999;
    }

    main span.post-update {
      font-size: 0.9rem;
      color: #888;
    }

    main summary {
      margin-top: 1em;
      margin-bottom: 0.25em;
    }
  </style>
  <body>
    <Header />
    <main>
      <h1>Blog</h1>
      {
        posts.map((post) => {
          return (
            <div id={post.id}>
              <span class="post-date">
                {post.data.pubDate?.toLocaleDateString("en-us", {
                  year: "numeric",
                  month: "short",
                  day: "numeric",
                })}
              </span>
              <a href={`/blog/${post.id}/`}>
                <h2>{post.data.title}</h2>
                {!post.data.image.src.includes("blank.png") && (
                  <Image src={post.data.image} alt={post.data.title} />
                )}
              </a>
              {post.data.description != null ? (
                <summary>{post.data.description}</summary>
              ) : (
                <summary
                  set:html={new MarkdownIt().render(
                    post.body ? post.body.trim().split("\n")[0] : ""
                  )}
                />
              )}
              {
                // prettier-ignore
                post.data.lastUpdateDate && (
                <span class="post-update">
                  Last updated on {
                  post.data.lastUpdateDate?.toLocaleDateString("en-us", {
                    year: "numeric",
                    month: "short",
                    day: "numeric",
                  })}.
                </span>
              )
              }
            </div>
          );
        })
      }
    </main>
    <Footer />
  </body>
</html>
